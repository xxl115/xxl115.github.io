{"pages":[{"title":"about","text":"","link":"/about/index.html"}],"posts":[{"title":"GitHub Pages 搭建个人博客","text":"1. GitHub 新建 xxl115.github.io 仓库参考 GitHub Pages 初始化仓库 2. 使用 hexo 生成静态博客系统对比 hexo、 Jekyll、 hugo ，最后决定使用hexo。 hexo 常用命令，官方文档inithexo init [folder] 新建一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站。 newhexo new [layout] &lt;title> 新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。 参数 描述 -p, –path 自定义新文章的路径 -r, –replace 如果存在同名文章，将其替换 -s, –slug 文章的 Slug，作为新文章的文件名和发布后的 URL layout 三种默认布局：post、page 和 draft。在创建这三种不同类型的文件时，它们将会被保存到不同的路径；而您自定义的其他布局和 post 相同，都将储存到 source/_posts 文件夹。 layout path post source/_posts page source draft source/_drafts generatehexo generate 生成静态网站。 该命令可以简写为 hexo g serverhexo server 启动服务器。默认情况下，访问网址为： http://localhost:4000/。 cleanhexo clean 清除缓存文件 (db.json) 和已生成的静态文件 (public)。 在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。 3. 选用 hexo-theme-matery 主题通过对比和筛选，最后选择使用 hexo-theme-matery。 hexo-theme-matery 是一个采用 Material Design 和响应式设计的 Hexo 博客主题。 特性 简单漂亮，文章内容美观易读 Material Design 设计 响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现 首页轮播文章及每天动态切换 Banner 图片 瀑布流式的博客文章列表（文章无特色图片时会有 24 张漂亮的图片代替） 时间轴式的归档页 词云的标签页和雷达图的分类页 丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等） 可自定义的数据的友情链接页面 支持文章置顶和文章打赏 支持 MathJax TOC 目录 可设置复制文章内容时追加版权信息 可设置阅读文章时做密码验证 Gitalk、Gitment、Valine 和 Disqus 评论模块（推荐使用 Gitalk） 集成了不蒜子统计、谷歌分析（Google Analytics）和文章字数统计等功能 支持在首页的音乐播放和视频播放功能 支持emoji表情，用markdown emoji语法书写直接生成对应的能跳跃的表情。 支持 DaoVoice、Tidio 在线聊天功能。 4. 使用 GitHub Actions 自动部署静态网站思路 在hexo分支，使用 hexo g 生成静态文件 将静态文件提交至 master 分支，通过域名就可以访问 解决办法通过 Github Actions 中 workflow 自动化执行，在 hexo 分支根目录新建文件夹 .github\\workflows ，在该文件中新建 node.js.yml 文件，每当 push 到该分支都会 CI 。 node.js.yml name: Node.js CI on: push: branches: - hexo jobs: build: runs-on: ubuntu-latest strategy: matrix: node-version: - 14.x steps: - uses: actions/checkout@v2 - name: Use Node.js ${{ matrix.node-version }} uses: actions/setup-node@v1 with: node-version: ${{ matrix.node-version }} - name: Install hexo run: | npm -g install hexo npm audit fix - name: hexo generate run: | hexo clean hexo generate - name: Commit files working-directory: ./public run: | git init git config user.name \"Young Bean\" git config user.email \"xxl115@163.com\" git add . git commit -a -m \"Auto update docs by Travis CI.\" - name: Push changes uses: ad-m/github-push-action@master with: github_token: ${{ secrets.GITHUB_TOKEN }} branch: master force: true directory: ./public 5. 使用自己的域名在 hexo 分支 source 文件夹下新建 CNAME 文件，CNAME 文件内容为自己的域名地址 blog.boletime.com ，具体可参考 配置 GitHub Pages 站点的自定义域。","link":"/2021/01/06/GitHub%20Pages%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"},{"title":"Trojan-go 安装与配置","text":"Trojan-go 版本：0.8.2 github 地址 : https://github.com/p4gefau1t/trojan-go doc 地址 : server 端 (CentOS 8)安装wget https://github.com/p4gefau1t/trojan-go/releases/download/v0.8.2/trojan-go-linux-amd64.zip unzip -o trojan-go-linux-amd64.zip -d /usr/local/bin/trojan-go 配置server.json { \"run_type\": \"server\", \"local_addr\": \"0.0.0.0\", \"local_port\": 443, \"remote_addr\": \"127.0.0.1\", \"remote_port\": 80, \"password\": [ \"password\" ], \"ssl\": { \"cert\": \"certificate.crt\", // 域名https证书 \"key\": \"private.key\", // 域名 私钥 \"sni\": \"域名\" }, \"router\": { \"enabled\": true, \"block\": [ \"geoip:private\" ], \"geoip\": \"/usr/share/trojan-go/geoip.dat\", \"geosite\": \"/usr/share/trojan-go/geosite.dat\" }, \"websocket\": { \"enabled\": true, \"path\": \"/trojan-go\", \"host\": \"域名\" } } 后台运行nohup ./trojan-go -config server.json > server.log 2>&amp;1 &amp; Client(Windows)下载地址 https://github.com/p4gefau1t/trojan-go/releases/download/v0.8.2/trojan-go-windows-amd64.zip 启动脚本start.bat @ECHO OFF %1 start mshta vbscript:createobject(\"wscript.shell\").run(\"\"\"%~0\"\" ::\",0)(window.close)&amp;&amp;exit start /b trojan-go.exe -config client.json 关闭脚本stop.bat @ECHO OFF taskkill /im trojan-go.exe /f ping -n 2 127.1 >nul 配置文件client.json { &quot;run_type&quot;: &quot;client&quot;, &quot;local_addr&quot;: &quot;127.0.0.1&quot;, &quot;local_port&quot;: 1080, &quot;remote_addr&quot;: &quot;域名&quot;, &quot;remote_port&quot;: 443, &quot;password&quot;: [ &quot;AC60XtgP&quot; ], &quot;ssl&quot;: { &quot;sni&quot;: &quot;域名&quot; }, &quot;mux&quot;: { &quot;enabled&quot;: true, &quot;concurrency&quot;: 8, &quot;idle_timeout&quot;: 60 }, &quot;router&quot;: { &quot;enabled&quot;: true, &quot;bypass&quot;: [ &quot;geoip:cn&quot;, &quot;geoip:private&quot;, &quot;geosite:cn&quot;, &quot;geosite:geolocation-cn&quot; ], &quot;block&quot;: [ &quot;geosite:category-ads&quot; ], &quot;proxy&quot;: [ &quot;geosite:geolocation-!cn&quot; ], &quot;default_policy&quot;: &quot;proxy&quot;, &quot;geoip&quot;: &quot;/usr/share/trojan-go/geoip.dat&quot;, &quot;geosite&quot;: &quot;/usr/share/trojan-go/geosite.dat&quot; }, &quot;websocket&quot;: { &quot;enabled&quot;: true, &quot;path&quot;: &quot;/trojan-go&quot;, &quot;host&quot;: &quot;域名&quot; } } chrome 插件 proxy-switchyomega使用 cloudflare 做 CDN 加速","link":"/2021/01/18/Trojan-go-%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"},{"title":"Windows 好用的软件","text":"1. Bitvise SSH Client (Linux连接工具)Bitvise 2. Qv2ray (VPN 代理工具)Qv2ray 3. Motrix （下载工具）Motrix 4. BurnAware Free (刻录软件)BurnAware Free 5. Office Tool PlusOffice Tool Plus 6. calibre-ebook(电子书阅读器)calibre-ebook","link":"/2021/04/29/Windows-%E5%A5%BD%E7%94%A8%E7%9A%84%E8%BD%AF%E4%BB%B6/"},{"title":"git 常用命令","text":"git clone 克隆 git add 添加 git commit 提交本地 git push 推送远程 git push -u origin test 与 test 分支建立关联 git pull 拉取新代码 git pull origin test 拉取制定分支代码 git branch 查看本地分支 git branch -a 查看所有分支 git branch -vv 查看本地和远程分支关联情况 git branch –set-upstream-to=origin/test 修改远程分支关联 git branch -D test 删除 test 分支名 git stash git stash list 查看历史 git stash show -p stash@{0} 查看 stash@{0} 的具体内容 git checkout 切换分支 git checkout -b 创建新分支 git checkout -b test origin test 创建新分支且关联远程分支 git merge 合并其他分支代码到目前分支 git rebase -i test 将当前分支提交合并至 test 分支 git rebase -i logID 合并 logID 后所有提交 参考： 1. git rebase -i 合并多次提交 2. 聊下 git rebase -i git rebase –onto 参考： Git rebase –onto 用法 git cherry-pick 合并某一次提交 参考：阮一峰的网络日志 git cherry-pick 教程 git remote 查看远程仓库名称 git remote -v 查看远程仓库名称和地址 git remote origin set-url NEWURL 修改远程仓库地址 git log –name-status 每次修改的文件列表，显示状态 git log –name-only 每次修改的文件列表 git log –stat 每次修改的文件列表，及文件修改的统计 git reset HEAD~1 git commit 提交规范 feat: 新功能（feature） fix: 修补 bug docs: 文档（documentation） style: 格式（不影响代码运行的变动） refactor: 重构（即不是新增功能，也不是修改 bug 的代码变动） chore: 构建过程或辅助工具的变动 revert: 撤销，版本回退 perf: 性能优化 test：测试 improvement: 改进 build: 打包 ci: 持续集成","link":"/2022/04/11/git-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new \"My New Post\" More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","link":"/2022/06/12/hello-world/"},{"title":"powershell 快捷键 收藏图片","text":"","link":"/2022/04/11/powershell-%E5%BF%AB%E6%8D%B7%E9%94%AE-%E6%94%B6%E8%97%8F%E5%9B%BE%E7%89%87/"},{"title":"命令行常用命令记录","text":"ctrl+z 挂起进程后怎么恢复 jobs 查看挂起的进程 fg 1 恢复挂起的进程 crontab 使用日期命名重定向文件 月份 0 12 * * * sh /tmp/test.sh >> \"/tmp/$(date +\"\\%Y-\\%m\").log\" 2>&amp;1 周 0 12 * * * sh /tmp/test.sh >> \"/tmp/$(date +\"\\%Y-W\\%W\").log\" 2>&amp;1 小时 0 12 * * * sh /tmp/test.sh >> \"/tmp/$(date +\"\\%Y-\\%m-\\%d_\\%H\").log\" 2>&amp;1","link":"/2022/04/11/%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95/"},{"title":"好用的工具、软件、插件整理","text":"1. CDNjsdelivr放在 Github 的资源在国内加载速度比较慢，因此需要使用 CDN 加速来优化网站打开速度，jsDelivr + Github 便是免费且好用的 CDN，非常适合博客网站使用。 用法 https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径 示例 https://cdn.jsdelivr.net/gh/xxl115/my-pic/blog/20210107110237.png 2. 图床PicGo一个用于快速上传图片并获取图片 URL 链接的工具 PicGo 配置 Github，同时使用 CDN （jsdelivr）加速，设置自定义域名为 https://cdn.jsdelivr.net/gh/xxl115/my-pic/ ，方便国内快速访问。更多配置可参考官方文档","link":"/2021/01/07/%E5%A5%BD%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7%E3%80%81%E8%BD%AF%E4%BB%B6%E3%80%81%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/"},{"title":"No appropriate protocol (protocol is disabled or cipher suites are inappropriate","text":"解决办法 参考地址： https://blog.csdn.net/he3more/article/details/122024655","link":"/2022/06/12/question/No%20appropriate%20protocol%20(protocol%20is%20disabled%20or%20cipher%20suites%20are%20%20%20inappropriate/"}],"tags":[{"name":"GitHub Pages","slug":"GitHub-Pages","link":"/tags/GitHub-Pages/"},{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"},{"name":"hexo-theme-matery","slug":"hexo-theme-matery","link":"/tags/hexo-theme-matery/"},{"name":"GitHub Actions","slug":"GitHub-Actions","link":"/tags/GitHub-Actions/"},{"name":"Trojan-go","slug":"Trojan-go","link":"/tags/Trojan-go/"},{"name":"软件","slug":"软件","link":"/tags/%E8%BD%AF%E4%BB%B6/"},{"name":"工具","slug":"工具","link":"/tags/%E5%B7%A5%E5%85%B7/"},{"name":"git","slug":"git","link":"/tags/git/"},{"name":"插件","slug":"插件","link":"/tags/%E6%8F%92%E4%BB%B6/"},{"name":"命令行","slug":"命令行","link":"/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C/"},{"name":"Java","slug":"Java","link":"/tags/Java/"}],"categories":[{"name":"工具","slug":"工具","link":"/categories/%E5%B7%A5%E5%85%B7/"},{"name":"Hello World","slug":"Hello-World","link":"/categories/Hello-World/"},{"name":"问题记录","slug":"问题记录","link":"/categories/%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"}]}